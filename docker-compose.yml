version: '3.8'

services:
  database:
    image: postgres:latest
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d postgres"]
      interval: 10s
      retries: 5
    command: ["postgres", "-c", "log_statement=all"]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/postgres
      SPRING_DATASOURCE_USERNAME: test_user
      SPRING_DATASOURCE_PASSWORD: qwe123
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_LOCATIONS: filesystem:/app/db/migration
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_JPA_SHOW_SQL: "true"
      JWT_SECRET: go1uazZR0e8fIQJIG6x2KBtjEHpDeMNvP/DDhy1uWd69Dv1L2jlJ55RfOVuEChjLj4l1gdRuTyCcwFkmTpKlew==
      JWT_EXPIRATION: 86400000
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  db_data: